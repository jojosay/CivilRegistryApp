<Application x:Class="CivilRegistryApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CivilRegistryApp"
             xmlns:converters="clr-namespace:CivilRegistryApp.Infrastructure.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Color Palette -->
            <Color x:Key="PrimaryColor">#2E3A59</Color>
            <Color x:Key="PrimaryLightColor">#4A5A89</Color>
            <Color x:Key="PrimaryDarkColor">#1A2439</Color>
            <Color x:Key="AccentColor">#4CAF50</Color>
            <Color x:Key="AccentLightColor">#80E27E</Color>
            <Color x:Key="AccentDarkColor">#087F23</Color>
            <Color x:Key="BackgroundColor">#2E3A59</Color>
            <Color x:Key="SurfaceColor">#2E3A59</Color>
            <Color x:Key="ErrorColor">#F44336</Color>
            <Color x:Key="WarningColor">#FFC107</Color>
            <Color x:Key="InfoColor">#2196F3</Color>
            <Color x:Key="SuccessColor">#4CAF50</Color>
            <Color x:Key="TextPrimaryColor">#FFFFFF</Color>
            <Color x:Key="TextSecondaryColor">#DDDDDD</Color>
            <Color x:Key="BorderColor">#4A5A89</Color>

            <!-- Brushes -->
            <SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}"/>
            <SolidColorBrush x:Key="PrimaryLightBrush" Color="{DynamicResource PrimaryLightColor}"/>
            <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{DynamicResource PrimaryDarkColor}"/>
            <SolidColorBrush x:Key="AccentBrush" Color="{DynamicResource AccentColor}"/>
            <SolidColorBrush x:Key="AccentLightBrush" Color="{DynamicResource AccentLightColor}"/>
            <SolidColorBrush x:Key="AccentDarkBrush" Color="{DynamicResource AccentDarkColor}"/>
            <SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource BackgroundColor}"/>
            <SolidColorBrush x:Key="SurfaceBrush" Color="{DynamicResource SurfaceColor}"/>
            <SolidColorBrush x:Key="ErrorBrush" Color="{DynamicResource ErrorColor}"/>
            <SolidColorBrush x:Key="WarningBrush" Color="{DynamicResource WarningColor}"/>
            <SolidColorBrush x:Key="InfoBrush" Color="{DynamicResource InfoColor}"/>
            <SolidColorBrush x:Key="SuccessBrush" Color="{DynamicResource SuccessColor}"/>
            <SolidColorBrush x:Key="TextPrimaryBrush" Color="{DynamicResource TextPrimaryColor}"/>
            <SolidColorBrush x:Key="TextSecondaryBrush" Color="{DynamicResource TextSecondaryColor}"/>
            <SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}"/>

            <!-- Typography -->
            <FontFamily x:Key="PrimaryFontFamily">Segoe UI</FontFamily>
            <system:Double x:Key="FontSizeSmall">12</system:Double>
            <system:Double x:Key="FontSizeNormal">14</system:Double>
            <system:Double x:Key="FontSizeMedium">16</system:Double>
            <system:Double x:Key="FontSizeLarge">20</system:Double>
            <system:Double x:Key="FontSizeExtraLarge">24</system:Double>
            <system:Double x:Key="FontSizeHeader">28</system:Double>

            <!-- Converters -->
            <converters:BoolToActiveStatusConverter x:Key="BoolToActiveStatusConverter"/>
            <converters:BoolToStatusColorConverter x:Key="BoolToStatusColorConverter"/>
            <converters:BoolToActivationButtonTextConverter x:Key="BoolToActivationButtonTextConverter"/>

            <!-- Animation Durations -->
            <Duration x:Key="AnimationDurationFast">0:0:0.2</Duration>
            <Duration x:Key="AnimationDurationNormal">0:0:0.3</Duration>
            <Duration x:Key="AnimationDurationSlow">0:0:0.5</Duration>

            <!-- Button Style -->
            <Style x:Key="DefaultButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
                <Setter Property="Padding" Value="15,8"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  TextElement.Foreground="White"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryLightBrush}"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.9"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryDarkBrush}"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" TargetName="border" Value="#CCCCCC"/>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        <!-- Simple Sidebar Button Style without Animation -->
        <Style x:Key="SidebarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="15"/> <!-- Increased font size -->
            <Setter Property="FontWeight" Value="SemiBold"/> <!-- Added font weight -->
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="White"
                                              TextElement.FontWeight="SemiBold"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryLightBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1.0"/> <!-- Full opacity on hover -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryDarkBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#CCCCCC"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Transparent Button Style with White Text -->
        <Style x:Key="TransparentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="15"/> <!-- Increased font size -->
            <Setter Property="FontWeight" Value="SemiBold"/> <!-- Added font weight -->
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="White"
                                              TextElement.FontWeight="SemiBold"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#3E4A6922"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1.0"/> <!-- Full opacity on hover -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#1E2A4933"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Accent Button Style -->
        <Style x:Key="AccentButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="White"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AccentLightBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AccentDarkBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#CCCCCC"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox Style -->
        <Style x:Key="DefaultTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- PasswordBox Style -->
        <Style x:Key="DefaultPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- System Colors Override for ComboBox Dropdown -->
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="#2E3A59"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowTextBrushKey}" Color="White"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#1A2439"/>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>

        <!-- ComboBox Style -->
        <Style x:Key="DefaultComboBoxStyle" TargetType="ComboBox">
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{DynamicResource PrimaryDarkBrush}"
                                      Foreground="White"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Padding="{TemplateBinding Padding}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border"
                                              Background="{DynamicResource PrimaryDarkBrush}"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              CornerRadius="4">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter x:Name="ContentSite"
                                                              Grid.Column="0"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Left"
                                                              Content="{TemplateBinding Content}"
                                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                              TextElement.Foreground="White" />
                                                <Path x:Name="Arrow"
                                                    Grid.Column="1"
                                                    Fill="White"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,10,0"
                                                    Data="M0,0 L8,0 L4,4 z" />
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" TargetName="Border" Value="0.5" />
                                                <Setter Property="Opacity" TargetName="Arrow" Value="0.5" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="RenderTransform" TargetName="Arrow">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterX="4" CenterY="2" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="{TemplateBinding Padding}"
                                TextElement.Foreground="White" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="Slide"
                                   StaysOpen="False">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource PrimaryDarkBrush}"
                                        BorderBrush="{DynamicResource BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        MinWidth="{Binding ActualWidth, ElementName=ToggleButton}">
                                    <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="#AAAAAA"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBoxItem Style -->
        <Style TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="8,5"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                TextElement.Foreground="White" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DatePicker Style -->
        <Style x:Key="DefaultDatePickerStyle" TargetType="DatePicker">
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border x:Name="MainBorder"
                                Background="{DynamicResource PrimaryDarkBrush}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid x:Name="PART_Root">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                  Grid.Column="0"
                                                  Foreground="White"
                                                  Background="{DynamicResource PrimaryDarkBrush}"
                                                  BorderThickness="0"
                                                  Padding="{TemplateBinding Padding}"
                                                  VerticalContentAlignment="Center" />
                                <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Padding="12,0"
                                        Margin="0">
                                    <Button.Content>
                                        <!-- Modern Calendar Icon -->
                                        <Grid Width="20" Height="20">
                                            <Path Fill="White"
                                                  Data="M16,2 L16,0 L14,0 L14,2 L6,2 L6,0 L4,0 L4,2 L2,2 C0.9,2 0,2.9 0,4 L0,18 C0,19.1 0.9,20 2,20 L18,20 C19.1,20 20,19.1 20,18 L20,4 C20,2.9 19.1,2 18,2 L16,2 Z M18,18 L2,18 L2,7 L18,7 L18,18 Z"
                                                  Stretch="Fill" />
                                            <Path Fill="#121212"
                                                  Data="M8,10 L6,10 L6,12 L8,12 L8,10 Z M12,10 L10,10 L10,12 L12,12 L12,10 Z M16,10 L14,10 L14,12 L16,12 L16,10 Z M8,14 L6,14 L6,16 L8,16 L8,14 Z M12,14 L10,14 L10,16 L12,16 L12,14 Z M16,14 L14,14 L14,16 L16,16 L16,14 Z"
                                                  Stretch="Fill" />
                                        </Grid>
                                    </Button.Content>
                                </Button>
                                <Popup x:Name="PART_Popup"
                                       StaysOpen="False"
                                       Placement="Bottom"
                                       AllowsTransparency="True"
                                       PlacementTarget="{Binding ElementName=PART_Root}">
                                    <Border Background="#121212"
                                            BorderBrush="#333333"
                                            BorderThickness="1"
                                            CornerRadius="0"
                                            Margin="0,4,0,0"
                                            Padding="0">
                                        <!-- Add subtle shadow effect -->
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="2" BlurRadius="8" Opacity="0.3" Color="Black"/>
                                        </Border.Effect>
                                        <Calendar x:Name="PART_Calendar"
                                                  Background="#121212"
                                                  Foreground="White"
                                                  BorderThickness="0">
                                            <!-- Force the Calendar to use our theme styles -->
                                            <Calendar.Resources>
                                                <Style TargetType="CalendarItem">
                                                    <Setter Property="Background" Value="#121212"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Margin" Value="0"/>
                                                </Style>
                                                <Style TargetType="CalendarButton">
                                                    <Setter Property="Background" Value="#121212"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Margin" Value="2"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="16"/>
                                                </Style>
                                                <Style TargetType="CalendarDayButton">
                                                    <Setter Property="Background" Value="#121212"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Margin" Value="2"/>
                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                    <Setter Property="FontSize" Value="16"/>
                                                </Style>
                                            </Calendar.Resources>
                                        </Calendar>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource PrimaryLightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="DatePickerTextBox">
                    <Setter Property="Background" Value="{DynamicResource PrimaryDarkBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="IsReadOnly" Value="False"/>
                </Style>
            </Style.Resources>
        </Style>

        <!-- Material Design DatePicker Style (default) -->
        <Style TargetType="DatePicker">
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="materialDesign:HintAssist.Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="1 0 1 0"/>
            <Setter Property="materialDesign:CalendarAssist.SelectionColor" Value="{DynamicResource MaterialDesignPrimary}"/>
            <Setter Property="materialDesign:CalendarAssist.SelectionForegroundColor" Value="White"/>
            <Setter Property="Style" Value="{DynamicResource MaterialDesignOutlinedDatePicker}"/>
        </Style>

        <!-- TextBlock Style -->
        <Style x:Key="DefaultTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!-- Header TextBlock Style -->
        <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
            <Setter Property="FontSize" Value="{DynamicResource FontSizeHeader}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- SubHeader TextBlock Style -->
        <Style x:Key="SubHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}">
            <Setter Property="FontSize" Value="{DynamicResource FontSizeLarge}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
        </Style>

        <!-- GroupBox Style -->
        <Style x:Key="DefaultGroupBoxStyle" TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="#3D4B6D"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Background" Value="#2E3A59"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontWeight="Bold" FontSize="{DynamicResource FontSizeMedium}" Foreground="White" Margin="0,0,0,5"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0" ContentSource="Header" />
                                <ContentPresenter Grid.Row="1" Content="{TemplateBinding Content}" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Default Styles for Common Controls -->
        <Style TargetType="Button">
            <!-- Force white text on all buttons -->
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}"/>
            <Setter Property="FontSize" Value="15"/> <!-- Increased font size -->
            <Setter Property="FontWeight" Value="SemiBold"/> <!-- Added font weight -->
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="White"
                                              TextElement.FontWeight="SemiBold">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryLightBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1.0"/> <!-- Full opacity on hover -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryDarkBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#CCCCCC"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button Style with Drop Shadow -->
        <Style x:Key="ButtonWithShadowStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">

                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="White"
                                              TextElement.FontWeight="SemiBold">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                    </Style>
                                </ContentPresenter.Resources>

                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryLightBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1.0"/> <!-- Full opacity on hover -->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryDarkBrush}"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#CCCCCC"/>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style for TextBlocks inside buttons to ensure white text -->
        <Style TargetType="TextBlock" x:Key="ButtonTextStyle">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}"/>
            <Style TargetType="PasswordBox" BasedOn="{StaticResource DefaultPasswordBoxStyle}"/>
            <Style TargetType="ComboBox" BasedOn="{StaticResource DefaultComboBoxStyle}"/>
            <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextBlockStyle}"/>
            <Style TargetType="GroupBox" BasedOn="{StaticResource DefaultGroupBoxStyle}"/>

            <!-- Theme Resources for Calendar Controls -->
            <!-- Calendar Style -->
            <Style x:Key="{x:Type Calendar}" TargetType="{x:Type Calendar}">
                <Setter Property="Background" Value="#2E3A59"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <Border Background="#2E3A59"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <CalendarItem x:Name="PART_CalendarItem"
                                                  Background="#2E3A59"
                                                  BorderBrush="{DynamicResource BorderBrush}"
                                                  BorderThickness="0"
                                                  Grid.Row="0"
                                                  Grid.RowSpan="2"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- CalendarItem Style -->
            <Style x:Key="{x:Type CalendarItem}" TargetType="{x:Type CalendarItem}">
                <Setter Property="Background" Value="#121212"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CalendarItem}">
                            <Border x:Name="PART_Root"
                                    Background="#121212"
                                    CornerRadius="0"
                                    Padding="0">
                                <Grid>
                                    <Grid.Resources>
                                        <SolidColorBrush x:Key="HeaderBackground" Color="#121212"/>
                                    </Grid.Resources>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Root"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- Header Panel with Modern Styling -->
                                    <Border x:Name="PART_HeaderPanel"
                                            Background="#121212"
                                            Grid.Row="0"
                                            CornerRadius="0"
                                            Margin="0,0,0,10"
                                            Padding="0">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!-- Previous Button with Modern Styling -->
                                            <Button x:Name="PART_PreviousButton"
                                                    Grid.Column="0"
                                                    Focusable="False"
                                                    HorizontalAlignment="Left"
                                                    Margin="10,0">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border Background="Transparent"
                                                                Width="30"
                                                                Height="30">
                                                            <TextBlock Text="&#x2039;"
                                                                       FontSize="24"
                                                                       Foreground="White"
                                                                       HorizontalAlignment="Center"
                                                                       VerticalAlignment="Center" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>

                                            <!-- Header Button with Modern Styling -->
                                            <Button x:Name="PART_HeaderButton"
                                                    Grid.Column="1"
                                                    Focusable="False"
                                                    FontWeight="Normal"
                                                    Foreground="White"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Padding="8,4">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border Background="Transparent"
                                                                Padding="8,4">
                                                            <TextBlock Foreground="White"
                                                                       FontWeight="Normal"
                                                                       FontSize="20"
                                                                       Text="{TemplateBinding Content}"
                                                                       TextAlignment="Center"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>

                                            <!-- Next Button with Modern Styling -->
                                            <Button x:Name="PART_NextButton"
                                                    Grid.Column="2"
                                                    Focusable="False"
                                                    HorizontalAlignment="Right"
                                                    Margin="10,0">
                                                <Button.Template>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border Background="Transparent"
                                                                Width="30"
                                                                Height="30">
                                                            <TextBlock Text="&#x203a;"
                                                                       FontSize="24"
                                                                       Foreground="White"
                                                                       HorizontalAlignment="Center"
                                                                       VerticalAlignment="Center" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </Grid>
                                    </Border>

                                    <!-- Month View with Modern Styling -->
                                    <Grid x:Name="PART_MonthView"
                                          Grid.Row="1"
                                          Visibility="Visible"
                                          Background="#121212">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <!-- Day titles with Modern Styling -->
                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="Su" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                        <TextBlock Grid.Column="1" Grid.Row="0" Text="Mo" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                        <TextBlock Grid.Column="2" Grid.Row="0" Text="Tu" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                        <TextBlock Grid.Column="3" Grid.Row="0" Text="We" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                        <TextBlock Grid.Column="4" Grid.Row="0" Text="Th" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                        <TextBlock Grid.Column="5" Grid.Row="0" Text="Fr" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                        <TextBlock Grid.Column="6" Grid.Row="0" Text="Sa" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontWeight="Normal" Margin="0,0,0,10" FontSize="16"/>
                                    </Grid>

                                    <!-- Year View with Modern Styling -->
                                    <Grid x:Name="PART_YearView"
                                          Grid.Row="1"
                                          Visibility="Hidden"
                                          Background="#121212">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- CalendarButton Style -->
            <Style x:Key="{x:Type CalendarButton}" TargetType="{x:Type CalendarButton}">
                <Setter Property="Background" Value="#121212"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="MinWidth" Value="40"/>
                <Setter Property="MinHeight" Value="40"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CalendarButton}">
                            <Grid>
                                <Border x:Name="Background"
                                        Background="#121212"
                                        CornerRadius="4"
                                        BorderThickness="0"/>
                                <ContentPresenter x:Name="Content"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.Foreground="#FFFFFF"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="#333333"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="White"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsInactive" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="#121212"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="#666666"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Background" Property="Background" Value="#121212"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="#666666"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- CalendarDayButton Style -->
            <Style x:Key="{x:Type CalendarDayButton}" TargetType="{x:Type CalendarDayButton}">
                <Setter Property="Background" Value="#121212"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="MinWidth" Value="36"/>
                <Setter Property="MinHeight" Value="36"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                            <Grid>
                                <Border x:Name="Background"
                                        Background="#121212"
                                        CornerRadius="4"
                                        BorderThickness="0"/>
                                <ContentPresenter x:Name="Content"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  TextElement.Foreground="#FFFFFF"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="#333333"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="White"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsToday" Value="True">
                                    <Setter TargetName="Background" Property="BorderBrush" Value="White"/>
                                    <Setter TargetName="Background" Property="BorderThickness" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsBlackedOut" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="#121212"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="#666666"/>
                                </Trigger>
                                <Trigger Property="IsInactive" Value="True">
                                    <Setter TargetName="Background" Property="Background" Value="#121212"/>
                                    <Setter TargetName="Content" Property="TextElement.Foreground" Value="#666666"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- DataGrid Style -->
            <Style TargetType="DataGrid">
                <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="RowBackground" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="AlternatingRowBackground" Value="{DynamicResource PrimaryDarkBrush}"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="RowHeaderWidth" Value="0"/>
            </Style>

            <!-- DataGridColumnHeader Style -->
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#2E3A59"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0,0,1,1"/>
            </Style>

            <!-- DataGridCell Style -->
            <Style TargetType="DataGridCell">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="10,5"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource PrimaryLightBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
